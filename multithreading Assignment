//multithreaded Assignment 
//Sourav_Tile_Dac_090
//1) create a multi-threaded application by using  "extends Thread " method.create 2 threads. they should display characters from A to J.

import java.util.concurrent.*;
class app implements Runnable
{
	synchronized static void disp() {
		char ch=65;
		for(int i=0;i<10;i++) {
			System.out.println(ch+" "+Thread.currentThread());
			ch++;
		}
	}
	public void run() {
		disp();
	}
}
public class myapp1 {

	public static void main(String[] args) {
		ExecutorService exe=Executors.newFixedThreadPool(2);
		app a=new app();	
		exe.execute(a);
		exe.execute(a);
		exe.shutdown();
	}
}

//-------------------------------------------------------
//2) above program  using "implements Runnable" method.

public class myapk implements Runnable{
	public void run()
	{
		disp1();
	}
	
	 void disp1() {
		 char ch=65;
		 for(int i=0;i<10;i++) {
			System.out.println(ch+" "+Thread.currentThread());
			ch++;
		 }
	 }
		
	public static void main(String[] args) {
		myapk ob=new myapk();
		Thread t1=new Thread(ob);
		Thread t2=new Thread(ob);
		t1.start();
		t2.start();
	
	}
}
//-----------------------------------------------------------
//3) create 3 threads in such a way that while one thread is executing, 2 threads cannot interfere. they should display output "Exec  0" to "Exec 5". 

class myapk implements Runnable{
	public void run()
	{
		disp1();
	}
	
	 synchronized void disp1() {
		 
		 for(int i=0;i<=5;i++) {
		 System.out.println(i+" "+Thread.currentThread());
		 
		 }
		 
	 }
		
	public static void main(String[] args) {
		myapk ob=new myapk();
		Thread t1 = new Thread(ob,"first");
		Thread t2 = new Thread(ob,"second");
		Thread t3 = new Thread(ob,"Third");
		t1.start();
		t2.start();
		t3.start();
	
	}
}

//------------------------------------------------------------

//4)create 2 threads. Write a program which displays number 1 to 10 using class lock. 
//[hint:- use "implements Runnable" and synchronized block]

import java.util.concurrent.*;
import java.util.concurrent.locks.ReentrantLock;

class app implements Runnable
{
	static ReentrantLock app=new ReentrantLock();
	synchronized static void disp() {
		app.lock();
		for(int i=0;i<=10;i++) {
			System.out.println(i+" "+Thread.currentThread());	
		}
		app.unlock();
	}
	public void run() {
		disp();
	}
}
public class myapp1 {

	public static void main(String[] args) {
		ExecutorService exe=Executors.newFixedThreadPool(2);
		app a=new app();	
		exe.execute(a);
		exe.execute(a);
		exe.shutdown();
	}
}

//-----------------------------------------------------------------------

/*
5) create 2 threads
	one thread will display 1 to 50
	second thread will display 50 to 1
both the threads should start simultaneously.

(use implements method)
*/

public class myapk implements Runnable{
	public void run()
	{
		disp1();
	}
	
	 void disp1() {
		 //System.out.println(Thread.currentThread());
		   
			 if(Thread.currentThread().getName() =="dirst")
			 {
				 for(int i=1;i<=50;i++) {	 
					 System.out.println(i+" "+Thread.currentThread());
				 }
			 }
			 else
			 {
				 for(int j =50;j>=1;j--)
					 System.out.println(j+" "+Thread.currentThread());
			 }	 
	 }
	public static void main(String[] args) {
		myapk ob=new myapk();
		Thread t1 = new Thread(ob,"dirst");
		Thread t2 = new Thread(ob,"second");
		t1.start();
		t2.start();
	}
}
